openapi: 3.0.3
info:
  title: CollabSync API
  version: 1.0.0
  description: API for CollabSync web application
servers:
  - url: http://localhost:5000
    description: Development Server
paths:
  /api/user:
    post:
      summary: Create a user account
      tags:
        - User
      requestBody:
        description: User account data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                email:
                  type: string
                access_token:
                  type: string
                refresh_token:
                  type: string
                expires_at:
                  type: string
              required:
                - id
      responses:
        '201':
          description: User account created successfully
        '200':
          description: User already exists
        '500':
          description: An error occurred

  /api/user/{id}:
    get:
      summary: Get user data by ID
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        200:
          description: User data retrieved successfully
        404:
          description: User not found
        500:
          description: An error occurred

  /api/user/workspaces/{creatorId}:
    get:
      summary: Get workspaces data associated with a creator by ID
      tags:
        - User
      parameters:
        - name: creatorId
          in: path
          required: true
          description: Creator's ID
          schema:
            type: string
      responses:
        200:
          description: Workspaces data retrieved successfully
        500:
          description: An error occurred

  /api/workspace:
    post:
      summary: Create a workspace
      tags:
        - Workspace
      requestBody:
        description: Workspace data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                workspaceName:
                  type: string
              required:
                - userId
                - workspaceName
      responses:
        201:
          description: Workspace created successfully
        403:
          description: User does not have the necessary permissions or workspace not found
        500:
          description: An error occurred

  /api/workspace/{workspaceId}:
    get:
      summary: Get workspace data by ID
      tags:
        - Workspace
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: Workspace ID
          schema:
            type: string
      responses:
        200:
          description: Workspace data retrieved successfully
        404:
          description: Workspace not found
        500:
          description: An error occurred

  /api/workspace/videos/{workspaceId}:
    get:
      summary: Get videos data associated with a workspace by ID
      tags:
        - Workspace
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: Workspace ID
          schema:
            type: string
      responses:
        200:
          description: Videos data retrieved successfully
        500:
          description: An error occurred

  /api/video:
    post:
      summary: Create a video
      tags:
        - Video
      requestBody:
        description: Video data including uploader ID, workspace ID, storage URL, and metadata.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uploaderId:
                  type: string
                  description: The ID of the user who uploaded the video.
                workspaceId:
                  type: string
                  description: The ID of the workspace where the video belongs.
                storageUrl:
                  type: string
                  description: The URL of the video stored in Firebase or another storage service.
                metadata:
                  type: object
                  properties:
                    title:
                      type: string
                      description: The title of the video.
                    description:
                      type: string
                      description: The description of the video.
                    tags:
                      type: array
                      items:
                        type: string
                      description: An array of tags associated with the video.
                    privacyStatus:
                      type: string
                      description: The privacy status of the video (e.g., 'private', 'public').
                  required:
                    - title
                    - description
                    - tags
                    - privacyStatus
      responses:
        201:
          description: Video created successfully.
          content:
            application/json:
              example:
                message: Video created successfully.
                videoId: abc123
        403:
          description: User does not have the necessary permissions or workspace not found.
          content:
            application/json:
              example:
                error: User does not have the necessary permissions or workspace not found.
        500:
          description: An error occurred.
          content:
            application/json:
              example:
                error: An error occurred.

  /api/video/{videoId}:
    get:
      summary: Get video data by ID
      tags:
        - Video
      parameters:
        - name: videoId
          in: path
          required: true
          description: Video ID
          schema:
            type: string
      responses:
        200:
          description: Video data retrieved successfully.
          content:
            application/json:
              example:
                title: Example Video
                description: This is an example video.
                tags:
                  - tag1
                  - tag2
                privacyStatus: private
                uploaderId: user123
                workspaceId: workspace456
                storageUrl: https://example.com/videos/video123.mp4
        404:
          description: Video not found.
          content:
            application/json:
              example:
                message: Video not found.
        500:
          description: An error occurred.
          content:
            application/json:
              example:
                error: An error occurred.

